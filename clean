#!/bin/bash

cd "$(dirname "$0")" ; here="$(pwd)"
source "$here/common"

declare -A references

reference_build() {
	
	local file="$1"
	local branch="$2"
	
	local path="${file%.ref}"
	local name="${path##*/}"
	local commit="$(cat "$file" 2> /dev/null)"
	
	if ! in_array "$name" "${build_types[@]}" ; then
		echo "Removing obsolete build type ${esc}[32m$name${esc}[0m in ${esc}[34m$branch${esc}[0m"
		rmbuild "$logs/branches/$branch/$name"
		return
	fi
	
	references["$commit"]=1
	
	local old_file="$path.old"
	if [ -f "$old_file" ] ; then
		local old_commit="$(cat "$old_file" 2> /dev/null)"
		references["$old_commit"]=1
	fi
	
}

reference_branch() {
	
	local dir="$1"
	
	[ -d "$dir" ] || return
	
	# Remove obsolete branches.
	branch="${f##*/}"
	if ! is_valid_branch "$branch" ; then 
		echo "Removing obsolete branch ${esc}[34m$branch${esc}[0m"
		rm -r "$dir"
		return
	fi
	
	for f in `dir -d $dir/*.ref 2> /dev/null` ; do
		reference_build "$f" "$branch"
	done
	
}


clean_commit() {
	
	local dir="$1"
	
	[ -d "$dir" ] || return
	
	local commit="${dir##*/}"
	if [ -z "$commit" ] ; then
		# Empty commit.
		return
	fi
	if [ ! -z "${references["$commit"]}" ] ; then
		# Referenced, don't delete
		return
	fi
	
	echo "Archiving unreferenced commit dir ${esc}[34m$commit${esc}[0m"
	
	# Remove empty directories.
	local archive="$dir.tar.xz"
	pushd "$logs/commits/" > /dev/null
	if ! tar -cJf "$archive" "$commit" || [ ! -f "$archive" ] ; then
		popd > /dev/null
		return
	fi
	rm -r "$commit"
	popd > /dev/null
	
}

echo "Cleaning unreferenced commit logs..."

branches=(`dir -d $repo/.git/logs/refs/remotes/origin/* 2> /dev/null`)

if [ $build_latest_tag = 1 ] ; then
	latest_tag="$(
		git --git-dir="$repo/.git" describe --tags $(git --git-dir="$repo/.git" rev-list --tags --max-count=1)
	)"
	[ -z "$latest_tag" ] || branches+=( "$latest_tag" )
fi

# Collect referenced commits.
for f in `dir -d $logs/branches/* 2> /dev/null` ; do
	reference_branch "$f"
done

# Clean unreferenced commits.
for f in `dir -d $logs/commits/* 2> /dev/null` ; do
	clean_commit "$f"
done

echo "Done."

#!/bin/bash

self="$(which "$0")"
here="$(readlink -f "$self")"
here="${here%/*}"

exe="${self##*/}"

export WINEPREFIX="$(readlink -f "$here/../deps/msvc/")"
export WINEDEBUG='-all'
unset DISPLAY # run in headless mode to prevent dialog on wine updates

if [ "$exe" = 'msvcrun' ] ; then
	case "$1" in
		--start)
			wineserver --persistent
			nohup wine cmd.exe < /dev/null &>/dev/null
		;;
		--stop)
			wineserver --kill
		;;
		*)
			echo "Please use symlink for the tool to invoke"
			exit 1
	esac
	exit 0
fi

dir="${self%/*}"
dir="${dir##*/msvc-}"

msvcver="${dir%%-*}"
msvcarch="${dir#*-}"

if [ ! -e "$WINEPREFIX" ] ; then
	echo "Please install MSVC into a WINEPREFIX at $WINEPREFIX"
	exit 1
fi

# TODO should be case-insensitive and / can be swapped with -
prefixes=(
	'/I'
	'/Fo'
	'/fo'
	'/Fd'
	'-I'
	'@'
)

bad_rc_options=(
	/GR-
	/MP
)

args=()

for arg in "$@" ;  do
	
	for prefix in "${prefixes[@]}" '' ; do
		if [[ "$arg" == "$prefix"* ]] ; then
			path="${arg#$prefix}"
			if [ "$prefix" != '' ] || ( [ -e "$path" ] && [ "$path" != "/lib" ] ) ; then
				case $path in
					/*)  path="$(winepath -w "$path")" ;;
					*/*) path="$(printf '%s' "$path" | sed 's:/:\\:g')" ;;
				esac
			fi
			arg="$prefix$path"
			break
		fi
	done
	
	if [ "$exe" = rc ] && ( [[ "$arg" == /GR* ]] || [[ "$arg" == /MP* ]] ) ; then
		# bad rc options
		continue
	fi
	
	args+=( "$arg" )
	
done

[ "$msvcarch" = '64' ] && msvcarch='x86_amd64'

msvcarchdir="$msvcarch\\"
[ "$msvcarch" = '32' ] && msvcarchdir=''

msvcinstalldir="C:\\Program Files\\Microsoft Visual Studio ${msvcver}"

envfile="${msvcinstalldir}\\VC\\bin\\${msvcarchdir}vcvars${msvcarch}.bat"

exec "$here/runwine" wine cmd /C call "$envfile" \> nul \& "$exe" "${args[@]}"

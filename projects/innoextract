#!/bin/bash

# What is the project called
project_name='innoextract'

project_buildlogs_url='https://constexpr.org/innoextract/buildlogs/'

# Some additional innoextract-specific build options
cmake_options[debugout]='-DDEBUG=1'
cmake_options[xtra]='-DDEBUG_EXTRA=1 -DSET_NOISY_WARNING_FLAGS=1 -DDUSE_LDGOLD=0'
cmake_options[nolzma]='-DUSE_LZMA=0'
cmake_options[style]="${cmake_options[debug]}"
cmake_options[gcc-freebsd-9.1-i686]+=" -DUSE_DYNAMIC_UTIMENSAT=1"
cmake_options[gcc-freebsd-9.1-x86-64]+=" -DUSE_DYNAMIC_UTIMENSAT=1"

# Compiler for builds that test library/config compatability
default_compiler='gcc-10'
old_compiler='gcc-4.6'

clang_tidy_checks+=(
	# innoextract should stay compatible with older compilers, disable C++11-specific checks
	"${clang_tidy_checks_nocxx11[@]}"
	'-google-runtime-references'
)
clang_tidy_checks_relaxed+=(
	'-cppcoreguidelines-pro-type-vararg' # ioctl
	'-cppcoreguidelines-special-member-functions' # warns with boost::noncopyable + non-default destructor
	# TODO Consider fixing and enabling these
	'-bugprone-branch-clone'
	'-bugprone-exception-escape'
	'-cert-err58-cpp'
	'-google-runtime-member-string-references'
	'-cppcoreguidelines-pro-type-member-init'
	'-misc-non-private-member-variables-in-classes'
	'-readability-const-return-type'
	'-readability-else-after-return'
	'-readability-isolate-declaration'
	'-readability-magic-numbers'
	'-readability-non-const-parameter'
	'-readability-simplify-boolean-expr'
)
clang_tidy_config['google-runtime-int.UnsignedTypePrefix']='"boost::uint"'
clang_tidy_config['google-runtime-int.SignedTypePrefix']='"boost::int"'

merge_config olddeps cmake-2.8.0
merge_config olddeps boost-1.37
merge_config olddeps libiconv-1.7
merge_config olddeps liblzma-5.0.0

merge_config newdeps cmake-dev

merge_config libiconv libiconv-1.14

# Finally, define the used build types.
# Each build type is an underscore-seperated list of tokens defined in
# cmake_options, compiler_options and make_options.
build_types=(
	
	# Static analyzers and style checks
	
	'clang-analyzer'
	
	'gcc-analyzer'
	
	'msvc-analyzer'
	
	'clang-tidy_strict'
	'clang-tidy_relaxed'
	
	'cppcheck'
	
	'flawfinder'
	
	# Test different build types
	
	'gcc-dev_xtra'
	'clang-dev_libcxx_xtra'
	'msvc-14.25-x64_xtra'
	
	$default_compiler'_static'
	
	$default_compiler'_debug_nolzma'
	
	# Test different compilers/stdlibs and versions
	
	'clang-3.3_libcxx_debug'
	'clang-3.3_libcxx'
	
	'clang-3.4_libcxx_debug'
	'clang-3.4_libcxx'
	
	'clang-3.5_libcxx_debug'
	'clang-3.5_libcxx'
	
	'clang-3.6_libcxx_debug'
	'clang-3.6_libcxx'
	
	'clang-3.7_libcxx_debug'
	'clang-3.7_libcxx'
	
	'clang-3.8_libcxx_debug'
	'clang-3.8_libcxx'
	
	'clang-3.9_libcxx_debug'
	'clang-3.9_libcxx'
	
	'clang-4_libcxx_debug'
	'clang-4_libcxx'
	
	'clang-5_libcxx_debug'
	'clang-5_libcxx'
	
	'clang-6_libcxx_debug'
	'clang-6_libcxx'
	
	'clang-7_libcxx_debug'
	'clang-7_libcxx'
	
	'clang-8_libcxx_debug'
	'clang-8_libcxx'
	
	'clang-9_libcxx_debug'
	'clang-9_libcxx'
	
	'clang-10_libcxx_debug'
	'clang-10_libcxx'
	
	'clang-dev_libcxx_debug'
	'clang-dev_libcxx'
	
	'clang-dev_libcxx_m32_debug'
	
	'clang-dev_libstdcxx_debug'
	'clang-dev_libstdcxx'
	
	'icc_debug'
	'icc'
	
	'gcc-4.1_debug'
	'gcc-4.1'
	
	'gcc-4.4_debug'
	'gcc-4.4'
	
	'gcc-4.5_debug'
	'gcc-4.5'
	
	'gcc-4.6_debug'
	'gcc-4.6'
	
	'gcc-4.7_debug'
	'gcc-4.7'
	
	'gcc-4.8_debug'
	'gcc-4.8'
	
	'gcc-4.9_debug'
	'gcc-4.9'
	
	'gcc-5_debug'
	'gcc-5'
	
	'gcc-6_debug'
	'gcc-6'
	
	'gcc-7_debug'
	'gcc-7'
	
	'gcc-8_debug'
	'gcc-8'
	
	'gcc-9_debug'
	'gcc-9'
	
	'gcc-10_debug'
	'gcc-10'
	
	'gcc-dev_debug'
	'gcc-dev'
	
	'mingw_lto_debugout'
	'mingw_lto'
	
	'msvc-9.0-x86_debugout' # for _debug we would need proper debug versions of all libs
	'msvc-9.0-x86'
	
	'msvc-10.0-x86'
	
	'msvc-11.0-x86'
	
	'msvc-12.0-x86'
	'msvc-12.0-x64'
	
	'msvc-14.0-x86'
	'msvc-14.0-x64'
	
	'msvc-14.11-x64'
	
	'msvc-14.12-x64'
	
	'msvc-14.13-x64'
	
	'msvc-14.14-x64'
	
	'msvc-14.15-x64'
	
	'msvc-14.16-x64'
	
	'msvc-14.20-x64'
	
	'msvc-14.21-x64'
	
	'msvc-14.22-x64'
	
	'msvc-14.23-x64'
	
	'msvc-14.24-x64'
	
	'msvc-14.25-x86'
	'msvc-14.25-x64'
	'msvc-14.25-x64_debugout'
	
	# Test different architectures
	
	$default_compiler'_m32_debug'
	$default_compiler'_m32'
	
	'gcc-armv6j-hf_lto'
	
	'gcc-bindist-i686_lto'
	'gcc-bindist-x86-64_lto'
	
	'gcc-freebsd-9.1-i686_debug'
	'gcc-freebsd-9.1-x86-64_lto'
	
	# Test different library versions
	
	'gcc-4.9_debug_boost-1.37'
	'gcc-4.9_debug_boost-1.39'
	'gcc-4.9_debug_boost-1.41'
	'gcc-4.9_debug_boost-1.42'
	'gcc-4.9_debug_boost-1.45'
	'gcc-4.9_debug_boost-1.46'
	'gcc-4.9_debug_boost-1.47'
	'gcc-4.9_debug_boost-1.48'
	'gcc-4.9_debug_boost-1.49'
	'gcc-4.9_debug_boost-1.50'
	'gcc-4.9_debug_boost-1.51'
	'gcc-4.9_debug_boost-1.52'
	'gcc-4.9_debug_boost-1.53'
	'gcc-4.9_debug_boost-1.54'
	'gcc-4.9_debug_boost-1.55'
	'gcc-4.9_debug_boost-1.56'
	'gcc-4.9_debug_boost-1.57'
	'gcc-4.9_debug_boost-1.58'
	'gcc-4.9_debug_boost-1.59'
	'gcc-4.9_debug_boost-1.60'
	'gcc-4.9_debug_boost-1.61'
	'gcc-4.9_debug_boost-1.62'
	'gcc-4.9_debug_boost-1.63'
	'gcc-4.9_debug_boost-1.64'
	'gcc-10_debug_boost-1.65'
	'gcc-10_debug_boost-1.66'
	'gcc-10_debug_boost-1.67'
	'gcc-10_debug_boost-1.68'
	'gcc-10_debug_boost-1.69'
	'gcc-10_debug_boost-1.70'
	'gcc-10_debug_boost-1.71'
	'gcc-10_debug_boost-1.72'
	'gcc-10_debug_boost-1.73'
	'gcc-10_debug_boost-1.74'
	
	$default_compiler'_libiconv'
	$old_compiler'_olddeps'
	$default_compiler'_newdeps'
	
	# TODO 'include-what-you-use'
	'oclint'
	
	'style'
	
	'doxygen'
	
)

ignore_config_warnings['*nolzma*']='CMake Warning' # A warning is expected here

favicons['../images/favicon.ico']=''
favicons['../images/favicon_16.png']='16x16'
favicons['../images/favicon_24.png']='24x24'
favicons['../images/favicon_32.png']='32x32'
favicons['../images/icon_64.png']='64x64'
favicons['../images/icon_96.png']='96x96'
favicons['../images/icon_128.png']='128x128'
favicons['../images/icon_192.png']='192x192'
favicons['../images/icon_256.png']='256x256'

covertiy_scan_project='585'
travis_ci_project='dscharrer/innoextract'
appveyor_project='dscharrer/innoextract'

commit_url=https://github.com/dscharrer/innoextract/commits/

ignore_warnings['gcc-4.1*']='warning\: dereferencing type\-punned pointer will break strict\-aliasing rules|warning\: format not a string literal\, argument types not checked'
ignore_warnings['gcc-4.4*']='warning\: array subscript is above array bounds'
ignore_warnings['gcc*xtra*']='padding struct size to alignment boundary'
